name: Build & Deploy BE to EC2

on:
  push:
    branches: ["main"]
    paths:
      - "backend/tour-booking/**"
      - ".github/workflows/ecr-push.yml"

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: tourbooking-be

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get AWS Account ID
        id: aws
        run: echo "ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> "$GITHUB_OUTPUT"

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION \
          | docker login --username AWS --password-stdin \
            ${{ steps.aws.outputs.ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build & Push image
        working-directory: backend/tour-booking
        env:
          REGISTRY: ${{ steps.aws.outputs.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          IMAGE: ${{ env.ECR_REPOSITORY }}
        run: |
          set -euxo pipefail
          IMAGE_LATEST="$REGISTRY/$IMAGE:latest"
          IMAGE_SHA="$REGISTRY/$IMAGE:${GITHUB_SHA}"
          docker build --pull -t "$IMAGE_LATEST" -t "$IMAGE_SHA" .
          docker push "$IMAGE_LATEST"
          docker push "$IMAGE_SHA"

  restart_ec2:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Restart service via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          command_timeout: 10m
          script: |
            set -euxo pipefail
            sudo systemctl restart be
            sleep 3
            sudo systemctl is-active be

